@use "sass:map";
@use "sass:math";

$grid-breakpoints: (
    xxl: 1400px,
    xl: 1200px,
    lg: 992px,
    md: 768px,
    sm: 576px,
);

$container-max-widths: (
    sm: 100%,
    md: 540px,
    lg: 720px,
    xl: 960px,
    xxl: 1140px,
);
$grid-column: 12;
$grid-gutter-column: 30px !default;
$gutters: (
    0: 0,
    1: 0.25,
    2: 0.5,
    3: 1,
    4: 1.5,
    5: 3,
);

%padding-gutter {
    padding-left: calc(var(--grid-gutter-x) * 0.5);
    padding-right: calc(var(--grid-gutter-x) * 0.5);
}
.container-fluid {
    --grid-gutter-x: #{$grid-gutter-column};
    --grid-gutter-y: 0;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    @extend %padding-gutter;
}

.container {
    @extend .container-fluid;
    width: 1370px;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-left: calc(var(--grid-gutter-x) * 0.5 * -1);
    margin-right: calc(var(--grid-gutter-x) * 0.5 * -1);
    margin-top: calc(var(--grid-gutter-y) * -1);

    &[class*="row-cols-"] > *,
    [class*="col-"] {
        flex: 0 0 auto;
        @extend %padding-gutter;
    }

    > * {
        margin-top: var(--grid-gutter-y);
    }
}

.col {
    flex: 1 0;
}

@mixin make-media-query($dimension) {
    @media (max-width: ($dimension - 0.02)) {
        @content;
    }
}
@mixin make-cols($infix: null) {
    @for $i from 1 through $grid-column {
        .col#{$infix}-#{$i} {
            width: math.div(100%, $grid-column) * $i;
        }
    }
}

@mixin make-row-cols($infix: null) {
    @for $i from 1 through $grid-column * 0.5 {
        .row-cols#{$infix}-#{$i} > * {
            width: math.div(100%, $i);
        }
    }
}

@mixin make-offsets($infix: null) {
    @for $i from 1 through $grid-column {
        .offset#{$infix}-#{$i} {
            margin-left: math.div(100%, $grid-column) * $i;
        }
    }
}

@mixin make-gutter($infix: null) {
    @each $i, $ratio in $gutters {
        .g#{$infix}-#{$i},
        .gx#{$infix}-#{$i} {
            --grid-gutter-x: #{$grid-gutter-column * $ratio};
        }
        .g#{$infix}-#{$i},
        .gy#{$infix}-#{$i} {
            --grid-gutter-y: #{$grid-gutter-column * $ratio};
        }
    }
}

@include make-row-cols();

@include make-cols();

@include make-offsets();

@include make-gutter();

@each $breakpoint, $dimension in $grid-breakpoints {
    $max-width: map.get($container-max-widths, $breakpoint);
    $infix: "-#{$breakpoint}";

    @include make-media-query($dimension) {
        .container {
            max-width: $max-width;
        }

        @include make-row-cols($infix);

        @include make-cols($infix);

        @include make-offsets($infix);

        @include make-gutter($infix);
    }
}
